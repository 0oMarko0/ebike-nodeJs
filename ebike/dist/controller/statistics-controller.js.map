{"version":3,"file":"statistics-controller.js","sourceRoot":"","sources":["../../src/controller/statistics-controller.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,4DAAsD;AAEtD,MAAqB,oBAAoB;IAErC,YAAY,cAA8B;QACtC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACzC,CAAC;IAEK,mBAAmB;;YACrB,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;YACtE,OAAO;gBACH,aAAa,EAAE,MAAM,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE;gBAChE,eAAe,EAAE,4BAAW,CAAC,WAAW,CAAC;gBACzC,aAAa,EAAE,MAAM,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;gBACxD,SAAS,EAAE,MAAM,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE;aACtD,CAAC;QACN,CAAC;KAAA;CACJ;AAfD,uCAeC","sourcesContent":["import StatisticsRepo from \"../data/repository/statistics-repo\";\nimport { meterToKilo } from \"../utils/unitConversion\";\n\nexport default class StatisticsController {\n    private statisticsRepo: StatisticsRepo;\n    constructor(statisticsRepo: StatisticsRepo) {\n        this.statisticsRepo = statisticsRepo;\n    }\n\n    async getGlobalStatistics() {\n        const { totalLength } = await this.statisticsRepo.getBikePathLength();\n        return {\n            nbRestaurants: await this.statisticsRepo.getNumberOfRestaurant(),\n            totalPathLength: meterToKilo(totalLength),\n            userConnected: await this.statisticsRepo.getActiveUser(),\n            totalUser: await this.statisticsRepo.getTotalUser(),\n        };\n    }\n}\n"]}