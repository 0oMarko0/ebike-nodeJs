{"version":3,"file":"authentication.js","sourceRoot":"","sources":["../../src/middleware/authentication.ts"],"names":[],"mappings":";;;;;AAAA,gEAA+B;AAE/B,6DAAqC;AAErC,2DAAyC;AAEzC,MAAM,aAAa,GAAG,eAAe,CAAC;AAMtC,MAAM,cAAc,GAAG,CAAC,GAAgB,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACxC,IAAI,KAAK,EAAE;QACP,IAAI;YACA,GAAG,CAAC,IAAI,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAS,CAAC;SAC9E;QAAC,OAAO,CAAC,EAAE;YACR,gBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,eAAW,CAAC,uBAAuB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;SACxE;KACJ;SAAM;QACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,eAAW,CAAC,8BAA8B,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;KAC/E;IACD,IAAI,EAAE,CAAC;AACX,CAAC,CAAC;AAEF,kBAAe,cAAc,CAAC","sourcesContent":["import jwt from \"jsonwebtoken\";\nimport { NextFunction, Request, Response } from \"express\";\nimport logger from \"../utils/logger\";\nimport User from \"../model/user\";\nimport formatError from \"../utils/error\";\n\nconst AUTHORIZATION = \"Authorization\";\n\nexport interface AuthRequest extends Request {\n    user?: User;\n}\n\nconst AuthMiddleware = (req: AuthRequest, res: Response, next: NextFunction) => {\n    const token = req.header(AUTHORIZATION);\n    if (token) {\n        try {\n            req.user = jwt.verify(token.split(\" \")[1], process.env.JWT_SECRET) as User;\n        } catch (e) {\n            logger.error(e.message);\n            res.status(401).send(formatError(\"Authentication failed\", req, 401));\n        }\n    } else {\n        res.status(401).send(formatError(\"You need to be authenticated\", req, 401));\n    }\n    next();\n};\n\nexport default AuthMiddleware;\n"]}