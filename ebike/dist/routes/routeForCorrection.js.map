{"version":3,"file":"routeForCorrection.js","sourceRoot":"","sources":["../../src/routes/routeForCorrection.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;uCACuC;AACvC,sDAA8B;AAC9B,iEAAyC;AACzC,oDAAiD;AAGjD,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACxC,MAAM,oBAAoB,GAAsB,kBAAQ,CAAC,OAAO,CAAC,uBAAU,CAAC,iBAAiB,CAAC,CAAC;IAC/F,GAAG,CAAC,IAAI,CAAC,MAAM,oBAAoB,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACpE,CAAC,CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["/* This file will include all the routes for the correction\nas they appear in the tp description */\nimport express from \"express\";\nimport Registry from \"../utils/registry\";\nimport { Injectable } from \"../utils/injectable\";\nimport JourneyController from \"../controller/journey-controller\";\n\nconst router = express.Router();\n\nrouter.get(\"/heartbeat\", async (req, res) => {\n    const restaurantController: JourneyController = Registry.resolve(Injectable.JourneyController);\n    res.send(await restaurantController.getHeartBeat()).status(200);\n});\n\nexport default router;\n"]}