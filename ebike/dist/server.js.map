{"version":3,"file":"server.js","sourceRoot":"","sources":["../src/server.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,gDAAwB;AACxB,kDAA0B;AAC1B,4DAAoC;AACpC,kEAA4C;AAC5C,wFAA+D;AAG/D,4DAAoC;AAEpC,MAAM,GAAG,GAAG,IAAI,8BAAmB,EAAE,CAAC;AAEtC,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;IAC3C,eAAO,CAAC,OAAO,EAAE;SACZ,IAAI,CAAC,GAAS,EAAE;QACb,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,MAAM,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;QACxB,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;QACnB,aAAG,CAAC,MAAM,CAAC,aAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE;YAC7B,gBAAM,CAAC,IAAI,CACP,eAAK,CAAC,KAAK,CAAC,sCAAsC,aAAG,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,aAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CACjG,CAAC;YACF,gBAAM,CAAC,IAAI,CAAC,eAAK,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACd,CAAC,CAAA,CAAC;SACD,KAAK,CAAC,MAAM,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,gBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAE/B,kBAAe,MAAM,CAAC","sourcesContent":["import app from \"./app\";\nimport chalk from \"chalk\";\nimport logger from \"./utils/logger\";\nimport MongoDB from \"./data/database/mongo\";\nimport DependencyInjection from \"./utils/dependency-injection\";\nimport Registry from \"./utils/registry\";\nimport { Injectable } from \"./utils/injectable\";\nimport Seed from \"./data/seed/seed\";\n\nconst dip = new DependencyInjection();\n\nconst server = new Promise((resolve, reject) => {\n    MongoDB.connect()\n        .then(async () => {\n            dip.bootstrap();\n            const seed = new Seed();\n            await seed.start();\n            app.listen(app.get(\"port\"), () => {\n                logger.info(\n                    chalk.green(`App is running at http://localhost:${app.get(\"port\")} in ${app.get(\"env\")} mode`),\n                );\n                logger.info(chalk.yellow(\"Press CTRL-C to stop\"));\n            });\n            resolve();\n        })\n        .catch(reject);\n}).catch(e => logger.error(e));\n\nexport default server;\n"]}